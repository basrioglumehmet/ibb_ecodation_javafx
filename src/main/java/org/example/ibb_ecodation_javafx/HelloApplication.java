package org.example.ibb_ecodation_javafx;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import org.example.ibb_ecodation_javafx.common.util.GuiAnimationUtil;
import org.example.ibb_ecodation_javafx.database.SingletonDBConnection;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

public class HelloApplication extends Application {
    @Override
    public void start(Stage stage) throws IOException {
        // Set up the UI
        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("hello-view.fxml"));
        Parent parent = fxmlLoader.load();
        Scene scene = new Scene(parent);
        scene.setFill(Color.TRANSPARENT);
        stage.initStyle(StageStyle.TRANSPARENT);
        stage.setTitle("Hello!");
        stage.setScene(scene);

        // Initialize the database
     //   initializeDatabase();

        GuiAnimationUtil.runAnimation(parent);
        // Show the stage (UI)
        stage.show();
    }

    /// //////////////////////////////////////////////////////////////////////////
    /// DATABASE
    private void initializeDatabase() {
        try {
            // Get database connection
            Connection conn = SingletonDBConnection.getInstance().getConnection();
            Statement stmt = conn.createStatement();

            // Create tables if not already created
            String createTableSQL = """
                CREATE TABLE IF NOT EXISTS users (
                    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    username VARCHAR(50) NOT NULL UNIQUE,
                    password VARCHAR(255) NOT NULL,
                    email VARCHAR(100) NOT NULL UNIQUE
                );
                CREATE TABLE IF NOT EXISTS receipts (
                    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    receipt_number VARCHAR(50) NOT NULL UNIQUE,
                    receipt_date DATE NOT NULL,
                    tax_number VARCHAR(20) NOT NULL,
                    company_name VARCHAR(100) NOT NULL,
                    customer_name VARCHAR(100) NOT NULL,
                    description TEXT,
                    created_by VARCHAR(100) NOT NULL,
                    account_code VARCHAR(50) NOT NULL,
                    receipt_type VARCHAR(20) NOT NULL CHECK (receipt_type IN ('Ödeme', 'Tahsilat', 'Masraf', 'Gelir')),
                    amount DECIMAL(10,2) NOT NULL,
                    vat_rate DECIMAL(5,2) NOT NULL,
                    total_amount DECIMAL(10,2) NOT NULL,
                    payment_type VARCHAR(20) NOT NULL CHECK (payment_type IN ('Nakit', 'Kredi Kartı', 'Havale', 'Çek')),
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );
            """;
            stmt.execute(createTableSQL);

            // Insert sample data
            String insertDataSQL = """
                MERGE INTO users (id, username, password, email)
                KEY(id) VALUES (1, 'Test', 'test', 'test@gmail.com');
            """;
            stmt.execute(insertDataSQL);
            conn.close();

            System.out.println("H2DB Veritabanı başarıyla oluşturuldu ve veri eklendi.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        launch();
    }
}
